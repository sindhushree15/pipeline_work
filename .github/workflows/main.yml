name: Python workflow

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install pipenv
        pipenv run python -m pip install --upgrade pip
        pipenv run python -m pip install liccheck
        if [ -f requirements.txt ]; then pipenv run python -m pip install -r requirements.txt; fi
    - name: License Checker
      uses: andersy005/gh-action-py-liccheck@main
      with:
        strategy-ini-file: ./liccheck.ini
        level: standard
        requirements-txt-file: ./licensetestrequirements.txt
        no-deps: true
        liccheck-version: 0.6.4
    - name: Check types with mypy
      run: pipenv run mypy main.py
    - name: Check with black
      run: pipenv run black main.py
    - name: Run iSort
      run: pipenv run isort main.py
    - name: pipenv run Run pytest
      run: |
        pipenv run pytest test.py -v
    
    - name: Security check - Bandit
      id: SecurityCheck
      uses: ./
      with:
        python_version: ${{ matrix.python-version }}
        project_path: .
        level: high
        confidence: high

    - name: Security check report artifacts
      uses: actions/upload-artifact@v1
      # if: failure()
      with:
        name: Security report
        path: output/security_report.txt
    - name: Check on failures
      if: steps.SecurityCheck.outcome != 'success'
      run: exit 1
    

